(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
Generated by: Alexey Vishnyakov, Andrey Fedotov, Daniil Kuts, Alexander Novikov, Darya Parygina, Eli Kobrin, Vlada Logunova, Pavel Belecky, Shamil Kurmangaleev
Generated on: 2021-02-19
Generator: Sydr: Cutting Edge Dynamic Symbolic Execution https://arxiv.org/abs/2011.09269
           Triton framework inside https://triton.quarkslab.com/
Application: Dynamic symbolic execution
Target solver: Yices 2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun file_elf_input_6928 () (_ BitVec 8))
(declare-fun file_elf_input_6929 () (_ BitVec 8))
(declare-fun file_elf_input_6930 () (_ BitVec 8))
(declare-fun file_elf_input_6931 () (_ BitVec 8))
(declare-fun file_elf_input_6932 () (_ BitVec 8))
(declare-fun file_elf_input_6933 () (_ BitVec 8))
(declare-fun file_elf_input_6934 () (_ BitVec 8))
(declare-fun file_elf_input_6935 () (_ BitVec 8))
(declare-fun file_elf_input_6936 () (_ BitVec 8))
(declare-fun file_elf_input_6937 () (_ BitVec 8))
(declare-fun file_elf_input_6938 () (_ BitVec 8))
(declare-fun file_elf_input_6939 () (_ BitVec 8))
(declare-fun file_elf_input_6940 () (_ BitVec 8))
(declare-fun file_elf_input_6941 () (_ BitVec 8))
(declare-fun file_elf_input_6942 () (_ BitVec 8))
(declare-fun file_elf_input_6943 () (_ BitVec 8))
(declare-fun file_elf_input_6960 () (_ BitVec 8))
(declare-fun file_elf_input_6961 () (_ BitVec 8))
(declare-fun file_elf_input_6962 () (_ BitVec 8))
(declare-fun file_elf_input_6963 () (_ BitVec 8))
(declare-fun file_elf_input_6964 () (_ BitVec 8))
(declare-fun file_elf_input_6965 () (_ BitVec 8))
(declare-fun file_elf_input_6966 () (_ BitVec 8))
(declare-fun file_elf_input_6967 () (_ BitVec 8))
(define-fun ref!11740 () (_ BitVec 8) file_elf_input_6928) ; Byte reference
(define-fun ref!11741 () (_ BitVec 8) file_elf_input_6929) ; Byte reference
(define-fun ref!11742 () (_ BitVec 8) file_elf_input_6930) ; Byte reference
(define-fun ref!11743 () (_ BitVec 8) file_elf_input_6931) ; Byte reference
(define-fun ref!11744 () (_ BitVec 8) file_elf_input_6932) ; Byte reference
(define-fun ref!11745 () (_ BitVec 8) file_elf_input_6933) ; Byte reference
(define-fun ref!11746 () (_ BitVec 8) file_elf_input_6934) ; Byte reference
(define-fun ref!11747 () (_ BitVec 8) file_elf_input_6935) ; Byte reference
(define-fun ref!11748 () (_ BitVec 8) file_elf_input_6936) ; Byte reference
(define-fun ref!11749 () (_ BitVec 8) file_elf_input_6937) ; Byte reference
(define-fun ref!11750 () (_ BitVec 8) file_elf_input_6938) ; Byte reference
(define-fun ref!11751 () (_ BitVec 8) file_elf_input_6939) ; Byte reference
(define-fun ref!11752 () (_ BitVec 8) file_elf_input_6940) ; Byte reference
(define-fun ref!11753 () (_ BitVec 8) file_elf_input_6941) ; Byte reference
(define-fun ref!11754 () (_ BitVec 8) file_elf_input_6942) ; Byte reference
(define-fun ref!11755 () (_ BitVec 8) file_elf_input_6943) ; Byte reference
(define-fun ref!11772 () (_ BitVec 8) file_elf_input_6960) ; Byte reference
(define-fun ref!11773 () (_ BitVec 8) file_elf_input_6961) ; Byte reference
(define-fun ref!11774 () (_ BitVec 8) file_elf_input_6962) ; Byte reference
(define-fun ref!11775 () (_ BitVec 8) file_elf_input_6963) ; Byte reference
(define-fun ref!11776 () (_ BitVec 8) file_elf_input_6964) ; Byte reference
(define-fun ref!11777 () (_ BitVec 8) file_elf_input_6965) ; Byte reference
(define-fun ref!11778 () (_ BitVec 8) file_elf_input_6966) ; Byte reference
(define-fun ref!11779 () (_ BitVec 8) file_elf_input_6967) ; Byte reference
(define-fun ref!24232 () (_ BitVec 8) ref!11747) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24233 () (_ BitVec 8) ref!11746) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24234 () (_ BitVec 8) ref!11745) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24235 () (_ BitVec 8) ref!11744) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24236 () (_ BitVec 8) ref!11743) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24237 () (_ BitVec 8) ref!11742) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24238 () (_ BitVec 8) ref!11741) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24239 () (_ BitVec 8) ref!11740) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24245 () (_ BitVec 8) ref!11755) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24246 () (_ BitVec 8) ref!11754) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24247 () (_ BitVec 8) ref!11753) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24248 () (_ BitVec 8) ref!11752) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24249 () (_ BitVec 8) ref!11751) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24250 () (_ BitVec 8) ref!11750) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24251 () (_ BitVec 8) ref!11749) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24252 () (_ BitVec 8) ref!11748) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24284 () (_ BitVec 8) ref!11779) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24285 () (_ BitVec 8) ref!11778) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24286 () (_ BitVec 8) ref!11777) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24287 () (_ BitVec 8) ref!11776) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24288 () (_ BitVec 8) ref!11775) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24289 () (_ BitVec 8) ref!11774) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24290 () (_ BitVec 8) ref!11773) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!24291 () (_ BitVec 8) ref!11772) ; Byte reference - MOVSQ operation - 0x7fbd2f58457b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!28468 () (_ BitVec 8) ref!24245) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28469 () (_ BitVec 8) ref!24246) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28470 () (_ BitVec 8) ref!24247) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28471 () (_ BitVec 8) ref!24248) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28472 () (_ BitVec 8) ref!24249) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28473 () (_ BitVec 8) ref!24250) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28474 () (_ BitVec 8) ref!24251) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28475 () (_ BitVec 8) ref!24252) ; Byte reference - MOV operation - 0x7fbd2c64051d: mov qword ptr [rbx + 0x20], rax
(define-fun ref!28483 () (_ BitVec 8) ref!24284) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28484 () (_ BitVec 8) ref!24285) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28485 () (_ BitVec 8) ref!24286) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28486 () (_ BitVec 8) ref!24287) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28487 () (_ BitVec 8) ref!24288) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28488 () (_ BitVec 8) ref!24289) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28489 () (_ BitVec 8) ref!24290) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28490 () (_ BitVec 8) ref!24291) ; Byte reference - MOV operation - 0x7fbd2c640530: mov qword ptr [rbx + 0x38], rax
(define-fun ref!28522 () (_ BitVec 8) ref!24232) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28523 () (_ BitVec 8) ref!24233) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28524 () (_ BitVec 8) ref!24234) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28525 () (_ BitVec 8) ref!24235) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28526 () (_ BitVec 8) ref!24236) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28527 () (_ BitVec 8) ref!24237) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28528 () (_ BitVec 8) ref!24238) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!28529 () (_ BitVec 8) ref!24239) ; Byte reference - MOV operation - 0x7fbd2c640562: mov qword ptr [rbx + 0x18], rax
(define-fun ref!39188 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!28483 ref!28484) ref!28485) ref!28486) ref!28487) ref!28488) ref!28489) ref!28490)) ; MOV operation - 0x7fbd2c643dc4: mov r8, qword ptr [r15 + 0x38]
(define-fun ref!39198 () (_ BitVec 64) (bvsub ref!39188 (_ bv24 64))) ; CMP operation - 0x7fbd2c644d98: cmp r8, 0x18
(define-fun ref!39204 () (_ BitVec 1) (ite (= ref!39198 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c644d98: cmp r8, 0x18
(define-fun ref!39228 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475)) ; MOV operation - 0x7fbd2c63fbae: mov r13, qword ptr [rsi + 0x20]
(define-fun ref!39230 () (_ BitVec 64) (bvand ref!39228 ref!39228)) ; TEST operation - 0x7fbd2c63fbb2: test r13, r13
(define-fun ref!39235 () (_ BitVec 1) (ite (= ref!39230 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63fbb2: test r13, r13
(define-fun ref!39238 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!28483 ref!28484) ref!28485) ref!28486) ref!28487) ref!28488) ref!28489) ref!28490)) ; MOV operation - 0x7fbd2c63fbd8: mov r14, qword ptr [rsi + 0x38]
(define-fun ref!39240 () (_ BitVec 64) (bvand ref!39238 ref!39238)) ; TEST operation - 0x7fbd2c63fbe5: test r14, r14
(define-fun ref!39245 () (_ BitVec 1) (ite (= ref!39240 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63fbe5: test r14, r14
(define-fun ref!39248 () (_ BitVec 64) (bvsub ref!39228 ref!39238)) ; CMP operation - 0x7fbd2c63fbee: cmp r13, r14
(define-fun ref!39250 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!39228 (bvxor ref!39238 ref!39248)) (bvand (bvxor ref!39228 ref!39248) (bvxor ref!39228 ref!39238))))) ; Carry flag - 0x7fbd2c63fbee: cmp r13, r14
(define-fun ref!39257 () (_ BitVec 64) (bvsub ref!39228 (concat (concat (concat (concat (concat (concat (concat (_ bv0 8) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv32 8)) (_ bv248 8)))) ; CMP operation - 0x7fbd2c63fbf3: cmp r13, qword ptr [rdi + 0x10]
(define-fun ref!39259 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!39228 (bvxor (concat (concat (concat (concat (concat (concat (concat (_ bv0 8) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv32 8)) (_ bv248 8)) ref!39257)) (bvand (bvxor ref!39228 ref!39257) (bvxor ref!39228 (concat (concat (concat (concat (concat (concat (concat (_ bv0 8) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv0 8)) (_ bv32 8)) (_ bv248 8))))))) ; Carry flag - 0x7fbd2c63fbf3: cmp r13, qword ptr [rdi + 0x10]
(define-fun ref!39263 () (_ BitVec 1) (ite (= ref!39257 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63fbf3: cmp r13, qword ptr [rdi + 0x10]
(define-fun ref!39266 () (_ BitVec 64) ref!39228) ; MOV operation - 0x7fbd2c63fbfd: mov rax, r13
(define-fun ref!39276 () (_ BitVec 64) (bvadd ref!39228 (_ bv1 64))) ; ADD operation - 0x7fbd2c63fc02: add r13, 1
(define-fun ref!39284 () (_ BitVec 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))) ; DIV operation - 0x7fbd2c63fc06: div r14
(define-fun ref!39299 () (_ BitVec 64) (bvadd ref!39284 (bvmul ref!39284 (_ bv2 64)))) ; LEA operation - 0x7fbd2c63fc11: lea rax, [rax + rax*2]
(define-fun ref!39301 () (_ BitVec 64) (bvshl ref!39299 (bvand ((_ zero_extend 56) (_ bv3 8)) (_ bv63 64)))) ; SHL operation - 0x7fbd2c63fc15: shl rax, 3
(define-fun ref!39308 () (_ BitVec 64) (bvsub ref!39301 ref!39276)) ; CMP operation - 0x7fbd2c63fc19: cmp rax, r13
(define-fun ref!39310 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!39301 (bvxor ref!39276 ref!39308)) (bvand (bvxor ref!39301 ref!39308) (bvxor ref!39301 ref!39276))))) ; Carry flag - 0x7fbd2c63fc19: cmp rax, r13
(define-fun ref!39314 () (_ BitVec 1) (ite (= ref!39308 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63fc19: cmp rax, r13
(define-fun ref!39433 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475)) ; MOV operation - 0x7fbd2c63fcdf: mov r9, qword ptr [rbx + 0x20]
(define-fun ref!39435 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!28522 ref!28523) ref!28524) ref!28525) ref!28526) ref!28527) ref!28528) ref!28529)) ; MOV operation - 0x7fbd2c63fcf1: mov rcx, qword ptr [rbx + 0x18]
(define-fun ref!39504 () (_ BitVec 64) ref!39433) ; IMUL operation - 0x7fbd2c63f1cd: imul r13, r9
(define-fun ref!39516 () (_ BitVec 64) (bvand ref!39433 ref!39433)) ; TEST operation - 0x7fbd2c63f1e3: test r9, r9
(define-fun ref!39521 () (_ BitVec 1) (ite (= ref!39516 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63f1e3: test r9, r9
(define-fun ref!39524 () (_ BitVec 64) (bvsub ref!39433 ref!39504)) ; CMP operation - 0x7fbd2c63f1ec: cmp r9, r13
(define-fun ref!39530 () (_ BitVec 1) (ite (= ref!39524 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63f1ec: cmp r9, r13
(define-fun ref!39537 () (_ BitVec 64) (bvsub ref!39504 (_ bv8440 64))) ; CMP operation - 0x7fbd2c63f25b: cmp r13, rax
(define-fun ref!39539 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!39504 (bvxor (_ bv8440 64) ref!39537)) (bvand (bvxor ref!39504 ref!39537) (bvxor ref!39504 (_ bv8440 64)))))) ; Carry flag - 0x7fbd2c63f25b: cmp r13, rax
(define-fun ref!39543 () (_ BitVec 1) (ite (= ref!39537 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63f25b: cmp r13, rax
(define-fun ref!39546 () (_ BitVec 64) ref!39435) ; ADD operation - 0x7fbd2c63f26b: add rsi, rcx
(define-fun ref!39554 () (_ BitVec 64) (bvadd ref!39504 ref!39546)) ; LEA operation - 0x7fbd2c63f26e: lea rdx, [r13 + rsi]
(define-fun ref!39556 () (_ BitVec 64) (bvsub (_ bv8440 64) ref!39554)) ; CMP operation - 0x7fbd2c63f273: cmp rax, rdx
(define-fun ref!39558 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv8440 64) (bvxor ref!39554 ref!39556)) (bvand (bvxor (_ bv8440 64) ref!39556) (bvxor (_ bv8440 64) ref!39554))))) ; Carry flag - 0x7fbd2c63f273: cmp rax, rdx
(define-fun ref!39584 () (_ BitVec 8) ref!28468) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39585 () (_ BitVec 8) ref!28469) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39586 () (_ BitVec 8) ref!28470) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39587 () (_ BitVec 8) ref!28471) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39588 () (_ BitVec 8) ref!28472) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39589 () (_ BitVec 8) ref!28473) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39590 () (_ BitVec 8) ref!28474) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39591 () (_ BitVec 8) ref!28475) ; Byte reference - PUSH operation - 0x7fbd2f56af10: push rbx
(define-fun ref!39596 () (_ BitVec 64) ref!39546) ; MOV operation - 0x7fbd2f56af16: mov r9, rsi
(define-fun ref!39604 () (_ BitVec 64) ref!39596) ; MOV operation - 0x7fbd2f56af7e: mov rsi, r9
(define-fun ref!39628 () (_ BitVec 64) ref!39604) ; MOV operation - 0x7fbd2f56d4f2: mov rbp, rsi
(define-fun ref!39643 () (_ BitVec 64) (bvsub (_ bv4096 64) ref!39628)) ; CMP operation - 0x7fbd2f56d68c: cmp rcx, rbp
(define-fun ref!39646 () (_ BitVec 1) ((_ extract 63 63) (bvand (bvxor (_ bv4096 64) ref!39628) (bvxor (_ bv4096 64) ref!39643)))) ; Overflow flag - 0x7fbd2f56d68c: cmp rcx, rbp
(define-fun ref!39648 () (_ BitVec 1) ((_ extract 63 63) ref!39643)) ; Sign flag - 0x7fbd2f56d68c: cmp rcx, rbp
(define-fun ref!39649 () (_ BitVec 1) (ite (= ref!39643 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56d68c: cmp rcx, rbp
(define-fun ref!39659 () (_ BitVec 64) ref!39628) ; MOV operation - 0x7fbd2f56d723: mov r12, rbp
(define-fun ref!39661 () (_ BitVec 64) (bvand (_ bv18446744073709547520 64) ref!39628)) ; AND operation - 0x7fbd2f56d734: and rsi, rbp
(define-fun ref!39668 () (_ BitVec 64) (bvsub ref!39659 ref!39661)) ; SUB operation - 0x7fbd2f56d737: sub r12, rsi
(define-fun ref!39676 () (_ BitVec 64) (bvsub ref!39668 (_ bv4096 64))) ; CMP operation - 0x7fbd2f56d73a: cmp r12, rax
(define-fun ref!39679 () (_ BitVec 1) ((_ extract 63 63) (bvand (bvxor ref!39668 (_ bv4096 64)) (bvxor ref!39668 ref!39676)))) ; Overflow flag - 0x7fbd2f56d73a: cmp r12, rax
(define-fun ref!39681 () (_ BitVec 1) ((_ extract 63 63) ref!39676)) ; Sign flag - 0x7fbd2f56d73a: cmp r12, rax
(define-fun ref!39682 () (_ BitVec 1) (ite (= ref!39676 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56d73a: cmp r12, rax
(define-fun ref!39693 () (_ BitVec 64) (bvand ref!39668 ref!39668)) ; TEST operation - 0x7fbd2f56d75f: test r12, r12
(define-fun ref!39698 () (_ BitVec 1) (ite (= ref!39693 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56d75f: test r12, r12
(define-fun ref!43810 () (_ BitVec 64) (bvsub ref!39668 (_ bv4096 64))) ; CMP operation - 0x7fbd2f56d78b: cmp r12, rax
(define-fun ref!43813 () (_ BitVec 1) ((_ extract 63 63) (bvand (bvxor ref!39668 (_ bv4096 64)) (bvxor ref!39668 ref!43810)))) ; Overflow flag - 0x7fbd2f56d78b: cmp r12, rax
(define-fun ref!43815 () (_ BitVec 1) ((_ extract 63 63) ref!43810)) ; Sign flag - 0x7fbd2f56d78b: cmp r12, rax
(define-fun ref!43816 () (_ BitVec 1) (ite (= ref!43810 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56d78b: cmp r12, rax
(define-fun ref!43827 () (_ BitVec 64) (bvadd ref!39668 (_ bv140450472928064 64))) ; ADD operation - 0x7fbd2f56d864: add r12, rdx
(define-fun ref!43853 () (_ BitVec 64) ref!39628) ; MOV operation - 0x7fbd2f56d5b6: mov rax, rbp
(define-fun ref!43864 () (_ BitVec 64) (bvsub ref!43853 (_ bv18446744073709551615 64))) ; CMP operation - 0x7fbd2f56af8b: cmp rax, -1
(define-fun ref!43870 () (_ BitVec 1) (ite (= ref!43864 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56af8b: cmp rax, -1
(define-fun ref!43872 () (_ BitVec 64) (concat ((_ extract 63 8) (_ bv0 64)) (ite (= ref!43870 (_ bv1 1)) (_ bv1 8) (_ bv0 8)))) ; SETE operation - 0x7fbd2f56af8f: sete dl
(define-fun ref!43874 () (_ BitVec 32) (bvneg ((_ extract 31 0) ref!43872))) ; Extended part - NEG operation - 0x7fbd2f56af92: neg edx
(define-fun ref!43892 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!39584 ref!39585) ref!39586) ref!39587) ref!39588) ref!39589) ref!39590) ref!39591)) ; POP operation - 0x7fbd2f56afe1: pop rbx
(define-fun ref!43895 () (_ BitVec 32) (bvand ref!43874 ref!43874)) ; TEST operation - 0x7fbd2c63f28f: test eax, eax
(define-fun ref!43900 () (_ BitVec 1) (ite (= ref!43895 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63f28f: test eax, eax
(define-fun ref!43922 () (_ BitVec 64) (bvsub ref!43892 (_ bv18446744073709551614 64))) ; CMP operation - 0x7fbd2c63f394: cmp rbx, rax
(define-fun ref!43924 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!43892 (bvxor (_ bv18446744073709551614 64) ref!43922)) (bvand (bvxor ref!43892 ref!43922) (bvxor ref!43892 (_ bv18446744073709551614 64)))))) ; Carry flag - 0x7fbd2c63f394: cmp rbx, rax
(define-fun ref!43942 () (_ BitVec 64) ref!43892) ; MOV operation - 0x7fbd2c63f2aa: mov rdx, rbx
(define-fun ref!43955 () (_ BitVec 64) ref!43942) ; IMUL operation - 0x7fbd2f5631b7: imul r12, rdx
(define-fun ref!43960 () (_ BitVec 8) ref!39584) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43961 () (_ BitVec 8) ref!39585) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43962 () (_ BitVec 8) ref!39586) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43963 () (_ BitVec 8) ref!39587) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43964 () (_ BitVec 8) ref!39588) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43965 () (_ BitVec 8) ref!39589) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43966 () (_ BitVec 8) ref!39590) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43967 () (_ BitVec 8) ref!39591) ; Byte reference - PUSH operation - 0x7fbd2f5631bc: push rbx
(define-fun ref!43978 () (_ BitVec 64) (bvand ref!43955 ref!43955)) ; TEST operation - 0x7fbd2f5631c1: test r12, r12
(define-fun ref!43983 () (_ BitVec 1) (ite (= ref!43978 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5631c1: test r12, r12
(define-fun ref!44000 () (_ BitVec 64) ref!43955) ; MOV operation - 0x7fbd2f56323b: mov rdx, r12
(define-fun ref!44003 () (_ BitVec 8) ref!39584) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44004 () (_ BitVec 8) ref!39585) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44005 () (_ BitVec 8) ref!39586) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44006 () (_ BitVec 8) ref!39587) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44007 () (_ BitVec 8) ref!39588) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44008 () (_ BitVec 8) ref!39589) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44009 () (_ BitVec 8) ref!39590) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44010 () (_ BitVec 8) ref!39591) ; Byte reference - PUSH operation - 0x7fbd2f56ded2: push r13
(define-fun ref!44014 () (_ BitVec 8) ref!39584) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44015 () (_ BitVec 8) ref!39585) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44016 () (_ BitVec 8) ref!39586) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44017 () (_ BitVec 8) ref!39587) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44018 () (_ BitVec 8) ref!39588) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44019 () (_ BitVec 8) ref!39589) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44020 () (_ BitVec 8) ref!39590) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44021 () (_ BitVec 8) ref!39591) ; Byte reference - PUSH operation - 0x7fbd2f56ded7: push r12
(define-fun ref!44024 () (_ BitVec 64) ref!44000) ; MOV operation - 0x7fbd2f56deda: mov r13, rdx
(define-fun ref!44026 () (_ BitVec 64) (bvand ref!44024 ref!44024)) ; TEST operation - 0x7fbd2f56deec: test r13, r13
(define-fun ref!44031 () (_ BitVec 1) (ite (= ref!44026 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f56deec: test r13, r13
(define-fun ref!44033 () (_ BitVec 64) ref!44024) ; MOV operation - 0x7fbd2f56deef: mov r12, r13
(define-fun ref!44036 () (_ BitVec 64) ref!43827) ; MOV operation - 0x7fbd2f56df00: mov rsi, qword ptr [rbx + 8]
(define-fun ref!44038 () (_ BitVec 64) (bvsub (_ bv140450472932160 64) ref!44036)) ; SUB operation - 0x7fbd2f56df08: sub rbp, rsi
(define-fun ref!44046 () (_ BitVec 64) (bvsub ref!44038 ref!44033)) ; CMP operation - 0x7fbd2f56df0b: cmp rbp, r12
(define-fun ref!44048 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!44038 (bvxor ref!44033 ref!44046)) (bvand (bvxor ref!44038 ref!44046) (bvxor ref!44038 ref!44033))))) ; Carry flag - 0x7fbd2f56df0b: cmp rbp, r12
(define-fun ref!44055 () (_ BitVec 64) ref!44033) ; MOV operation - 0x7fbd2f56dfd8: mov rdx, r12
(define-fun ref!44057 () (_ BitVec 64) (bvsub ref!44055 (_ bv32 64))) ; CMP operation - 0x7fbd2f5894f0: cmp rdx, 0x20
(define-fun ref!44059 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!44055 (bvxor (_ bv32 64) ref!44057)) (bvand (bvxor ref!44055 ref!44057) (bvxor ref!44055 (_ bv32 64)))))) ; Carry flag - 0x7fbd2f5894f0: cmp rdx, 0x20
(define-fun ref!44066 () (_ BitVec 32) ((_ extract 31 0) ref!44036)) ; Extended part - MOV operation - 0x7fbd2f589575: mov ecx, esi
(define-fun ref!44069 () (_ BitVec 32) (bvand ref!44066 (_ bv7 32))) ; Extended part - AND operation - 0x7fbd2f589577: and ecx, 7
(define-fun ref!44075 () (_ BitVec 1) (ite (= ref!44069 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589577: and ecx, 7
(define-fun ref!44078 () (_ BitVec 64) (bvsub ref!44055 (_ bv1024 64))) ; CMP operation - 0x7fbd2f5895b0: cmp rdx, 0x400
(define-fun ref!44080 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor ref!44055 (bvxor (_ bv1024 64) ref!44078)) (bvand (bvxor ref!44055 ref!44078) (bvxor ref!44055 (_ bv1024 64)))))) ; Carry flag - 0x7fbd2f5895b0: cmp rdx, 0x400
(define-fun ref!44084 () (_ BitVec 1) (ite (= ref!44078 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895b0: cmp rdx, 0x400
(define-fun ref!44087 () (_ BitVec 32) ((_ extract 31 0) ref!44055)) ; Extended part - MOV operation - 0x7fbd2f5895b9: mov ecx, edx
(define-fun ref!44090 () (_ BitVec 32) (bvlshr ref!44087 (bvand ((_ zero_extend 24) (_ bv5 8)) (_ bv31 32)))) ; Extended part - SHR operation - 0x7fbd2f5895bb: shr ecx, 5
(define-fun ref!44096 () (_ BitVec 1) (ite (= (bvand ((_ zero_extend 24) (_ bv5 8)) (_ bv31 32)) (_ bv0 32)) ref!44084 (ite (= ref!44090 (_ bv0 32)) (_ bv1 1) (_ bv0 1)))) ; Zero flag - 0x7fbd2f5895bb: shr ecx, 5
(define-fun ref!44099 () (_ BitVec 32) (bvsub ref!44090 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44105 () (_ BitVec 1) (ite (= ref!44099 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44158 () (_ BitVec 32) (bvsub ref!44099 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44164 () (_ BitVec 1) (ite (= ref!44158 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44217 () (_ BitVec 32) (bvsub ref!44158 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44223 () (_ BitVec 1) (ite (= ref!44217 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44276 () (_ BitVec 32) (bvsub ref!44217 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44282 () (_ BitVec 1) (ite (= ref!44276 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44335 () (_ BitVec 32) (bvsub ref!44276 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44341 () (_ BitVec 1) (ite (= ref!44335 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44394 () (_ BitVec 32) (bvsub ref!44335 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44400 () (_ BitVec 1) (ite (= ref!44394 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44453 () (_ BitVec 32) (bvsub ref!44394 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44459 () (_ BitVec 1) (ite (= ref!44453 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44512 () (_ BitVec 32) (bvsub ref!44453 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44518 () (_ BitVec 1) (ite (= ref!44512 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44571 () (_ BitVec 32) (bvsub ref!44512 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44577 () (_ BitVec 1) (ite (= ref!44571 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44630 () (_ BitVec 32) (bvsub ref!44571 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44636 () (_ BitVec 1) (ite (= ref!44630 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44689 () (_ BitVec 32) (bvsub ref!44630 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44695 () (_ BitVec 1) (ite (= ref!44689 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44748 () (_ BitVec 32) (bvsub ref!44689 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44754 () (_ BitVec 1) (ite (= ref!44748 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44807 () (_ BitVec 32) (bvsub ref!44748 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44813 () (_ BitVec 1) (ite (= ref!44807 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44866 () (_ BitVec 32) (bvsub ref!44807 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44872 () (_ BitVec 1) (ite (= ref!44866 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44925 () (_ BitVec 32) (bvsub ref!44866 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44931 () (_ BitVec 1) (ite (= ref!44925 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895c0: dec ecx
(define-fun ref!44984 () (_ BitVec 32) (bvsub ref!44925 (_ bv1 32))) ; Extended part - DEC operation - 0x7fbd2f5895ea: dec ecx
(define-fun ref!44990 () (_ BitVec 1) (ite (= ref!44984 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5895ea: dec ecx
(define-fun ref!45043 () (_ BitVec 32) (bvand ((_ extract 31 0) ref!44055) (_ bv31 32))) ; Extended part - AND operation - 0x7fbd2f589620: and edx, 0x1f
(define-fun ref!45049 () (_ BitVec 1) (ite (= ref!45043 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589620: and edx, 0x1f
(define-fun ref!45054 () (_ BitVec 8) (bvand ((_ extract 7 0) ref!45043) (_ bv1 8))) ; TEST operation - 0x7fbd2f5894f9: test dl, 1
(define-fun ref!45059 () (_ BitVec 1) (ite (= ref!45054 (_ bv0 8)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f5894f9: test dl, 1
(define-fun ref!45062 () (_ BitVec 8) (bvand ((_ extract 7 0) ref!45043) (_ bv2 8))) ; TEST operation - 0x7fbd2f589509: test dl, 2
(define-fun ref!45067 () (_ BitVec 1) (ite (= ref!45062 (_ bv0 8)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589509: test dl, 2
(define-fun ref!45070 () (_ BitVec 8) (bvand ((_ extract 7 0) ref!45043) (_ bv4 8))) ; TEST operation - 0x7fbd2f589520: test dl, 4
(define-fun ref!45075 () (_ BitVec 1) (ite (= ref!45070 (_ bv0 8)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589520: test dl, 4
(define-fun ref!45078 () (_ BitVec 8) (bvand ((_ extract 7 0) ref!45043) (_ bv8 8))) ; TEST operation - 0x7fbd2f589531: test dl, 8
(define-fun ref!45083 () (_ BitVec 1) (ite (= ref!45078 (_ bv0 8)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589531: test dl, 8
(define-fun ref!45086 () (_ BitVec 32) (bvand ref!45043 (_ bv240 32))) ; Extended part - AND operation - 0x7fbd2f589544: and edx, 0xf0
(define-fun ref!45092 () (_ BitVec 1) (ite (= ref!45086 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f589544: and edx, 0xf0
(define-fun ref!45119 () (_ BitVec 32) (bvsub ref!45086 (_ bv16 32))) ; Extended part - SUB operation - 0x7fbd2f58955e: sub edx, 0x10
(define-fun ref!45126 () (_ BitVec 1) (ite (= ref!45119 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f58955e: sub edx, 0x10
(define-fun ref!45155 () (_ BitVec 64) ref!44024) ; MOV operation - 0x7fbd2f56dfc3: mov rax, r13
(define-fun ref!45157 () (_ BitVec 64) ref!45155) ; SUB operation - 0x7fbd2f56dfc7: sub rax, r12
(define-fun ref!45168 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!44014 ref!44015) ref!44016) ref!44017) ref!44018) ref!44019) ref!44020) ref!44021)) ; POP operation - 0x7fbd2f56dfcb: pop r12
(define-fun ref!45171 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!44003 ref!44004) ref!44005) ref!44006) ref!44007) ref!44008) ref!44009) ref!44010)) ; POP operation - 0x7fbd2f56dfcd: pop r13
(define-fun ref!45181 () (_ BitVec 64) ref!45157) ; MOV operation - 0x7fbd2f56324c: mov rsi, rax
(define-fun ref!45185 () (_ BitVec 64) (bvsub ref!45168 ref!45181)) ; CMP operation - 0x7fbd2f563290: cmp r12, rsi
(define-fun ref!45191 () (_ BitVec 1) (ite (= ref!45185 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2f563290: cmp r12, rsi
(define-fun ref!45202 () (_ BitVec 64) ref!45171) ; MOV operation - 0x7fbd2f5632c4: mov rax, r13
(define-fun ref!45204 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!43960 ref!43961) ref!43962) ref!43963) ref!43964) ref!43965) ref!43966) ref!43967)) ; POP operation - 0x7fbd2f5632c7: pop rbx
(define-fun ref!45213 () (_ BitVec 64) (bvsub ref!45204 ref!45202)) ; CMP operation - 0x7fbd2c63f2b8: cmp rbx, rax
(define-fun ref!45219 () (_ BitVec 1) (ite (= ref!45213 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63f2b8: cmp rbx, rax
(define-fun ref!45249 () (_ BitVec 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))) ; MOV operation - 0x7fbd2c64005a: mov rdi, qword ptr [rsp + 8]
(define-fun ref!45251 () (_ BitVec 64) (bvsub (_ bv576460752303423487 64) ref!45249)) ; CMP operation - 0x7fbd2c67ff3c: cmp rax, rdi
(define-fun ref!45257 () (_ BitVec 1) (ite (= ref!45251 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c67ff3c: cmp rax, rdi
(define-fun ref!45295 () (_ BitVec 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))) ; CMP operation - 0x7fbd2c63fea9: cmp qword ptr [rsp + 8], 0
(define-fun ref!45301 () (_ BitVec 1) (ite (= ref!45295 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c63fea9: cmp qword ptr [rsp + 8], 0
(define-fun ref!45423 () (_ BitVec 64) (bvsub (_ bv1 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45425 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv1 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!45423)) (bvand (bvxor (_ bv1 64) ref!45423) (bvxor (_ bv1 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45540 () (_ BitVec 64) (bvsub (_ bv2 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45542 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv2 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!45540)) (bvand (bvxor (_ bv2 64) ref!45540) (bvxor (_ bv2 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45657 () (_ BitVec 64) (bvsub (_ bv3 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45659 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv3 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!45657)) (bvand (bvxor (_ bv3 64) ref!45657) (bvxor (_ bv3 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45774 () (_ BitVec 64) (bvsub (_ bv4 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45776 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv4 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!45774)) (bvand (bvxor (_ bv4 64) ref!45774) (bvxor (_ bv4 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45891 () (_ BitVec 64) (bvsub (_ bv5 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!45893 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv5 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!45891)) (bvand (bvxor (_ bv5 64) ref!45891) (bvxor (_ bv5 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46008 () (_ BitVec 64) (bvsub (_ bv6 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46010 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv6 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46008)) (bvand (bvxor (_ bv6 64) ref!46008) (bvxor (_ bv6 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46125 () (_ BitVec 64) (bvsub (_ bv7 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46127 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv7 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46125)) (bvand (bvxor (_ bv7 64) ref!46125) (bvxor (_ bv7 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46242 () (_ BitVec 64) (bvsub (_ bv8 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46244 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv8 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46242)) (bvand (bvxor (_ bv8 64) ref!46242) (bvxor (_ bv8 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46359 () (_ BitVec 64) (bvsub (_ bv9 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46361 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv9 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46359)) (bvand (bvxor (_ bv9 64) ref!46359) (bvxor (_ bv9 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46476 () (_ BitVec 64) (bvsub (_ bv10 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46478 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv10 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46476)) (bvand (bvxor (_ bv10 64) ref!46476) (bvxor (_ bv10 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46593 () (_ BitVec 64) (bvsub (_ bv11 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46595 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv11 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46593)) (bvand (bvxor (_ bv11 64) ref!46593) (bvxor (_ bv11 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46710 () (_ BitVec 64) (bvsub (_ bv12 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46712 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv12 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46710)) (bvand (bvxor (_ bv12 64) ref!46710) (bvxor (_ bv12 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46827 () (_ BitVec 64) (bvsub (_ bv13 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46829 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv13 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46827)) (bvand (bvxor (_ bv13 64) ref!46827) (bvxor (_ bv13 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46944 () (_ BitVec 64) (bvsub (_ bv14 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!46946 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv14 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!46944)) (bvand (bvxor (_ bv14 64) ref!46944) (bvxor (_ bv14 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47061 () (_ BitVec 64) (bvsub (_ bv15 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47063 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv15 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47061)) (bvand (bvxor (_ bv15 64) ref!47061) (bvxor (_ bv15 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47178 () (_ BitVec 64) (bvsub (_ bv16 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47180 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv16 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47178)) (bvand (bvxor (_ bv16 64) ref!47178) (bvxor (_ bv16 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47295 () (_ BitVec 64) (bvsub (_ bv17 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47297 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv17 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47295)) (bvand (bvxor (_ bv17 64) ref!47295) (bvxor (_ bv17 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47412 () (_ BitVec 64) (bvsub (_ bv18 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47414 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv18 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47412)) (bvand (bvxor (_ bv18 64) ref!47412) (bvxor (_ bv18 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47529 () (_ BitVec 64) (bvsub (_ bv19 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47531 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv19 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47529)) (bvand (bvxor (_ bv19 64) ref!47529) (bvxor (_ bv19 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47646 () (_ BitVec 64) (bvsub (_ bv20 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47648 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv20 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47646)) (bvand (bvxor (_ bv20 64) ref!47646) (bvxor (_ bv20 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47763 () (_ BitVec 64) (bvsub (_ bv21 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))))) ; CMP operation - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!47765 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (_ bv21 64) (bvxor ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238))) ref!47763)) (bvand (bvxor (_ bv21 64) ref!47763) (bvxor (_ bv21 64) ((_ extract 63 0) (bvudiv (concat (_ bv0 64) ref!39266) ((_ zero_extend 64) ref!39238)))))))) ; Carry flag - 0x7fbd2c63ff1e: cmp rbx, qword ptr [rsp + 8]
(define-fun ref!67590 () (_ BitVec 64) (bvsub (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475) (_ bv8440 64))) ; CMP operation - 0x7fbd2c643f74: cmp qword ptr [r15 + 0x20], rax
(define-fun ref!67592 () (_ BitVec 1) ((_ extract 63 63) (bvxor (bvxor (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475) (bvxor (_ bv8440 64) ref!67590)) (bvand (bvxor (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475) ref!67590) (bvxor (concat (concat (concat (concat (concat (concat (concat ref!28468 ref!28469) ref!28470) ref!28471) ref!28472) ref!28473) ref!28474) ref!28475) (_ bv8440 64)))))) ; Carry flag - 0x7fbd2c643f74: cmp qword ptr [r15 + 0x20], rax
(define-fun ref!67596 () (_ BitVec 1) (ite (= ref!67590 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fbd2c643f74: cmp qword ptr [r15 + 0x20], rax
(assert (not (= ref!39204 (_ bv0 1))))
(assert (= ref!39235 (_ bv0 1)))
(assert (not (= ref!39245 (_ bv1 1))))
(assert (not (= ref!39250 (_ bv1 1))))
(assert (not (= (bvand (bvnot ref!39259) (bvnot ref!39263)) (_ bv1 1))))
(assert (= (bvor ref!39310 ref!39314) (_ bv1 1)))
(assert (not (= ref!39521 (_ bv1 1))))
(assert (= ref!39530 (_ bv1 1)))
(assert (not (= (bvand (bvnot ref!39539) (bvnot ref!39543)) (_ bv1 1))))
(assert (not (= ref!39558 (_ bv1 1))))
(assert (= (bvor (bvxor ref!39648 ref!39646) ref!39649) (_ bv0 1)))
(assert (not (= (bvor (bvxor ref!39681 ref!39679) ref!39682) (_ bv0 1))))
(assert (not (= ref!39698 (_ bv1 1))))
(assert (= (bvor (bvxor ref!43815 ref!43813) ref!43816) (_ bv1 1)))
(assert (not (= ref!43900 (_ bv0 1))))
(assert (= ref!43924 (_ bv1 1)))
(assert (not (= ref!43983 (_ bv1 1))))
(assert (not (= ref!44031 (_ bv1 1))))
(assert (= ref!44048 (_ bv0 1)))
(assert (= ref!44059 (_ bv0 1)))
(assert (= ref!44075 (_ bv1 1)))
(assert (not (= (bvand (bvnot ref!44080) (bvnot ref!44084)) (_ bv1 1))))
(assert (not (= ref!44096 (_ bv1 1))))
(assert (not (= ref!44105 (_ bv1 1))))
(assert (= ref!44164 (_ bv0 1)))
(assert (not (= ref!44223 (_ bv1 1))))
(assert (= ref!44282 (_ bv0 1)))
(assert (not (= ref!44341 (_ bv1 1))))
(assert (= ref!44400 (_ bv0 1)))
(assert (not (= ref!44459 (_ bv1 1))))
(assert (= ref!44518 (_ bv0 1)))
(assert (not (= ref!44577 (_ bv1 1))))
(assert (= ref!44636 (_ bv0 1)))
(assert (not (= ref!44695 (_ bv1 1))))
(assert (= ref!44754 (_ bv0 1)))
(assert (not (= ref!44813 (_ bv1 1))))
(assert (= ref!44872 (_ bv0 1)))
(assert (not (= ref!44931 (_ bv1 1))))
(assert (not (= ref!44990 (_ bv0 1))))
(assert (= ref!45049 (_ bv0 1)))
(assert (= ref!45059 (_ bv1 1)))
(assert (= ref!45067 (_ bv1 1)))
(assert (= ref!45075 (_ bv1 1)))
(assert (= ref!45083 (_ bv1 1)))
(assert (not (= ref!45092 (_ bv1 1))))
(assert (not (= ref!45126 (_ bv0 1))))
(assert (= ref!45191 (_ bv1 1)))
(assert (= ref!45219 (_ bv1 1)))
(assert (not (= ref!45257 (_ bv1 1))))
(assert (not (= ref!45301 (_ bv1 1))))
(assert (not (= ref!45425 (_ bv0 1))))
(assert (not (= ref!45542 (_ bv0 1))))
(assert (not (= ref!45659 (_ bv0 1))))
(assert (not (= ref!45776 (_ bv0 1))))
(assert (not (= ref!45893 (_ bv0 1))))
(assert (not (= ref!46010 (_ bv0 1))))
(assert (not (= ref!46127 (_ bv0 1))))
(assert (not (= ref!46244 (_ bv0 1))))
(assert (not (= ref!46361 (_ bv0 1))))
(assert (not (= ref!46478 (_ bv0 1))))
(assert (not (= ref!46595 (_ bv0 1))))
(assert (not (= ref!46712 (_ bv0 1))))
(assert (not (= ref!46829 (_ bv0 1))))
(assert (not (= ref!46946 (_ bv0 1))))
(assert (not (= ref!47063 (_ bv0 1))))
(assert (not (= ref!47180 (_ bv0 1))))
(assert (not (= ref!47297 (_ bv0 1))))
(assert (not (= ref!47414 (_ bv0 1))))
(assert (not (= ref!47531 (_ bv0 1))))
(assert (not (= ref!47648 (_ bv0 1))))
(assert (not (= ref!47765 (_ bv0 1))))
(assert (not (= (bvor ref!67592 ref!67596) (_ bv1 1))))
(minimize  file_elf_input_6928 )
(check-sat)
(get-objectives)
(exit)
